1.是什么?
	三大组件之一，三大组件分别是：Servlet程序、Listener监听器、Filter过滤器
2.作用？
	拦截请求、过滤响应
3.怎么用?
	<!--filter标签用于配置一个Filter过滤器-->
	<filter> 
		<!-给filter起一个别名--> 
		<filter-name>AdminFilter</filter-name> 
		<!-配置filter的全类名 --> 
		<filter-class>com.atguigu.filter.AdminFilter</filter-class> 
	</filter>
	<!--filter-mapping配置Filter过滤器的拦截路径 -->
	<filter-mapping> 
	<!--filter-name表示当前的拦截路径给哪个filter使用 -->
	<filter-name>AdminFilter</filter-name> 
	<!--url-pattern配置拦截路径
		/表示请求地址为：http://ip:port/工程路径/ 映射到IDEA的web目录
		/admin/*表示请求地址为：http://ip:port/工程路径/admin/*
	--> 
	<url-pattern>/admin/*</url-pattern> </filter-mapping>

	使用步骤：
	1、编写一个类去实现 Filter 接口 
	2、实现过滤方法 doFilter() 
	3、到 web.xml 中去配置 Filter 的拦截路径
4.生命周期？
	Filter 的生命周期包含几个方法 
		1、构造器方法 
		2、init 初始化方法，在 web 工程启动的时候执行（Filter 已经创建）
		3、doFilter 过滤方法，每次拦截到请求，就会执行
		4、destroy 销毁 ，停止 web 工程的时候，就会执行（停止 web 工程，也会销毁 Filter 过滤器）
5.FilterConfig 类
	FilterConfig 类见名知义，它是 Filter 过滤器的配置文件类。 Tomcat 每次创建 Filter 的时候，也会同时创建一个 FilterConfig 类，这里包含了 Filter 配置文件的配置信息。
	FilterConfig 类的作用是获取 filter 过滤器的配置内容 
		1、获取 Filter 的名称 filter-name 的内容 
		2、获取在 Filter 中配置的 init-param 初始化参数 
		3、获取 ServletContext 对象
6.FilterChain 过滤器链
	FilterChain就是多个过滤器如何一起工作
	详情看图
7.Filter 的拦截路径
	--精确匹配
		<url-pattern>/target.jsp</url-pattern> 
		以上配置的路径，表示请求地址必须为：http://ip:port/工程路径/target.jsp
	--目录匹配
		<url-pattern>/admin/*</url-pattern> 
		以上配置的路径，表示请求地址必须为：http://ip:port/工程路径/admin/*
	--后缀名匹配
	<url-pattern>*.html</url-pattern> 
		以上配置的路径，表示请求地址必须以.html 结尾才会拦截到 
	<url-pattern>*.do</url-pattern> 
		以上配置的路径，表示请求地址必须以.do 结尾才会拦截到 
	<url-pattern>*.action</url-pattern> 
	以上配置的路径，表示请求地址必须以.action 结尾才会拦截到
	
	Filter 过滤器它只关心请求的地址是否匹配，不关心请求的资源是否存在！！！



