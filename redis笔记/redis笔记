1.高并发：
	它通常是指，通过设计保证系统能够同时并行处理很多请求。
2.NoSQL：
	不仅仅是SQL，泛指非关系型数据库，这些类型的数据存储不需要固定的模式，无需多余的操作就可以横向扩展。
	怎么玩：KV、Cache、Persistence
3.NoSQL数据模型:
	聚合模型：
		KV键值
		Bson：BSON之名缘于JSON，含义为Binary JSON（二进制JSON）
		列族：
		图：多对多
4.CAP原理：
	4.1 CAP是什么？
		C:强一致性（数据不能有差错）
		A:可用性(系统不能崩溃)
		P:分区容错性（又叫分布式容忍性）
	4.2 CAP三进二
		- 在分布式系统中，最多只能满足两个，但是P：分区容错性我们必须实现
		CA:单点集群，满足一致性、可用性的系统，通常在扩展性上不太强大；比如：Oracle
		CP:满足一致性，分区容错性的系统，性能不是特别高；比如：Redis、Mongodb
		AP:满足可用性，分区容错性的系统，对一致性要求低一点；比如：大多数网站架构的选择
5.BASE
	- 思想是通过让系统放松对某一时刻数据一致性的要求来换取系统整体伸缩性和性能上的改观
	BA：基本可用
	S：软状态
	E：最终一致
6.分布式+集群
	分布式：不同的多台服务器上面部署不同的服务模块（工程），他们之间通过Rpc/Rmi之间通信和调用，对外提供服务和组内协作
	集群：不同的多台服务器上面部署相同的服务模块，通过分布式调度软件进行统一的调度，对外提供服务和访问
7.redis
	7.1是什么
		Redis：REmote DIctionary Server(远程字典服务器)，是一个高性能的（key/value）分布式内存数据库
		三个特点：
			- 支持数据持久化，可以将内存中的数据保持在磁盘中，重启的时候可以再次加载进行使用
			- 不仅仅支持简单的key-value类型的数据，同时还提供list，set，zset，hash等数据结构的存储
			- 支持数据的备份，即master-slave模式的数据备份
	7.2能干嘛
		内存存储和持久化、模拟httpSession、定时器、计数器
	7.3去哪下
		http://redis.io/ 英文
		http://www.redis.cn/ 中文
	7.4安装
		wget http://download.redis.io/releases/redis-5.0.5.tar.gz
		tar xzf redis-5.0.5.tar.gz
		cd redis-5.0.5
		make
		可能make会出错，gcc未安装。
		gcc
			是什么：linux下的一个编译程序，是c程序的编译工具
			安装：yum install gcc-c++

	7.5启动
		- 将redis.conf复制保存一份，修改配置文件
			找到GENERAL，修改daemonize no 为yes，保存退出（不要动原来的conf，动保存后的）
		- 启动redis
			./redis-server ./redis.conf 后面的conf为刚才修改的conf
			./redis-cli -p 6379
8.Redis数据类型
	8.1 String(字符串)
		- redis最基本的类型，一个key对应一个value
		- 二进制安全，意思是redis的string可以包含任何数据。比如jpg图片或者序列化对象。
		- 一个redis字符串value最多可以是512M

	8.2 Hash（哈希，类似java里面的Map）
		- 是一个键值对集合
		- 是一个string类型的field和value的映射表，hash特别适用于存储对象
	8.3 List（列表）
		- 简单的string字符串列表，按照插入顺序排序，你可以添加一个元素到列表的头部（左边）或者尾部（右边）
		- 底层是是个链表（有序有重复）
	8.4 Set（集合）
		- string类型的无序集合，通过hashTable实现的（无序不重复）
	8.5 Zset（sorted set：有序集合）
		- 和set一样也是string类型元素的集合，且不允许重复的成员
		- 不同的是每个元素都会关联一个double类型的分数
		- 通过分数来从小到大排序，zset成员是唯一的，但分数（score）可以重复
9.redis常见数据类型操作命令
	http://redisdoc.com
10.key关键字
	


